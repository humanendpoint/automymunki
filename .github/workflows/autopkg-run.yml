---
name: AutoPkg Run

on:
  schedule:
    - cron: '0 9 * * Tue,Thu'
  workflow_dispatch:
    inputs:
      recipes:
        description: List of recipes to run separated by spaces
        required: False

jobs:
  Autopkg:
    runs-on: macos-14-xlarge
    timeout-minutes: 160
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      #- name: Install Apple Installer certificates
      #  uses: apple-actions/import-codesign-certs@63fff01cd422d4b7b855d40ca1e9d34d2de9427d # v2.0.0
      #  with:
      #    keychain-password: ${{ github.run_id }}
      #    p12-file-base64: ${{ secrets.PKG_CERTIFICATES_P12_MAOS }}
      #    p12-password: ${{ secrets.PKG_CERTIFICATES_P12_PASSWORD_MAOS }}

      #- name: Install Apple Application certificates
      #  uses: apple-actions/import-codesign-certs@63fff01cd422d4b7b855d40ca1e9d34d2de9427d # v2.0.0
      #  with:
      #    create-keychain: false
      #    keychain-password: ${{ github.run_id }}
      #    p12-file-base64: ${{ secrets.APP_CERTIFICATES_P12_MAOS }}
      #    p12-password: ${{ secrets.APP_CERTIFICATES_P12_PASSWORD_MAOS }}

      - name: Install Munki
        run: |
          curl -L ${{ env.MUNKI_URL }} --output /tmp/munkitools.pkg
          echo "${{ env.MUNKI_SHA256 }} */tmp/munkitools.pkg" | shasum -c
          if [[ $? != "0" ]]; then exit 1; fi
          sudo installer -pkg /tmp/munkitools.pkg -target /
        env:
          MUNKI_SHA256: "5693054947a6f6e696ab6906ae48257802b1348aa2b6a78bd75b6573e37c4483"
          MUNKI_URL: "https://github.com/munki/munki/releases/download/v6.6.0/munkitools-6.6.0.4690.pkg"

      - name: Install AutoPkg
        run: |
          curl -L ${{ env.AUTOPKG_URL }} --output /tmp/autopkg.pkg
          echo "${{ env.AUTOPKG_SHA256 }} */tmp/autopkg.pkg" | shasum -c
          if [[ $? != "0" ]]; then exit 1; fi
          sudo installer -pkg /tmp/autopkg.pkg -target /
        env:
          AUTOPKG_SHA256: "2ff34daf02256ad81e2c74c83a9f4c312fa2f9dd212aba59e0cef0e6ba1be5c9"
          AUTOPKG_URL: "https://github.com/autopkg/autopkg/releases/download/v2.7.2/autopkg-2.7.2.pkg"
      # used for munki-build
      #- uses: actions/create-github-app-token@v1
      #  id: app-token
      #  with:
      #    app-id: ${{ secrets.GH_APP_ID }}
      #    private-key: ${{ secrets.GIT_APP_PEM_KEY }}
      #    repositories: "automaticmunki"

      - name: download cache
        id: download-cache
        uses: dawidd6/action-download-artifact@v6
        with:
          name: AutoPkg
          path: /Users/runner/Library/AutoPkg
          if_no_artifact_found: warn
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install and configure dependencies
        run: |
          # install for building binary recipes
          python3 -m pip install --upgrade pip setuptools build --break-system-packages
          python3 -m pip install requests pyyaml --break-system-packages
          brew install pkg-config m4 autoconf automake coreutils
          git config http.postBuffer 2147483648

          # required to use non-built in m4
          brew link m4 --force

          # use looseversion for version comparison in AutoPkg recipes
          /usr/local/autopkg/python -m pip install looseversion

          # configure AutoPkg
          defaults write com.github.autopkg RECIPE_OVERRIDE_DIRS "$GITHUB_WORKSPACE"/autopkg/RecipeOverrides/
          defaults write com.github.autopkg RECIPE_SEARCH_DIRS "$GITHUB_WORKSPACE"/autopkg/recipes/
          defaults write com.github.autopkg FAIL_RECIPES_WITHOUT_TRUST_INFO -bool YES
          defaults write com.github.autopkg MUNKI_REPO "$GITHUB_WORKSPACE"/munki_repo
          defaults write com.github.autopkg GITHUB_TOKEN "${{ secrets.GITHUB_TOKEN }}"
          if [ ! -d "$GITHUB_WORKSPACE"/munki_repo/pkgs/ ]; then
            /bin/mkdir ./munki_repo/pkgs/
          fi
          if [ ! -d "/Users/runner/Library/AutoPkg" ]; then
            /bin/mkdir /Users/runner/Library/AutoPkg/
          fi

          # extract the AutoPkg cache
          cd /Users/runner/Library/AutoPkg
          echo "Checking for .tar.gz files"
          TAR_FILE=$(ls *.tar.gz 2> /dev/null)
          if [ -z "$TAR_FILE" ]; then
            echo "No .tar.gz file found in /Users/runner/Library/AutoPkg"
          fi
          echo "Found .tar.gz file: $TAR_FILE"
          echo "Extracting $TAR_FILE"
          tar -xzf "$TAR_FILE"
          rm AutoPkg.tar.gz

      - name: Remove unused applications
        run: |
          df -hI /dev/disk3s1s1
          sudo rm -rf /Applications/Xcode_14.3.1.app
          sudo rm -rf /Applications/Xcode_15.0.1.app
          sudo rm -rf /Applications/Xcode_15.1.app
          sudo rm -rf /Applications/Xcode_15.2.app
          sudo rm -rf /Applications/Xcode_15.3.app
          df -hI /dev/disk3s1s1

      - name: Add AutoPkg repos
        run: |
          for repo in $(cat autopkg/repo_list.txt); do autopkg repo-add "$repo"; done

      - name: Run makecatalogs
        run: /usr/local/munki/makecatalogs munki_repo -s

      - name: Run AutoPkg
        run: python3 autopkg/autopkg_tools.py
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REVIEWERS: humanendpoint
          INPUT_RECIPES: ${{ github.event.inputs.recipes }}

      #- name: GCS Auth
      #  uses: 'google-github-actions/auth@v2'
      #  with:
      #    token_format: 'access_token'
      #    credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      #- name: Setup Cloud SDK
      #  uses: 'google-github-actions/setup-gcloud@v2'

      #- name: Bucket Sync
      #  run: |
           # export the python path because gcloud sdk needs to know where python is
      #    export CLOUDSDK_PYTHON=$(which python3)

           # sync the pkg files to the bucket, without removing any files from the bucket
      #    gsutil -m rsync -r -i -x '.DS_Store|.git' "${GITHUB_WORKSPACE}"/munki_repo/pkgs gs://${BUCKET_NAME}/pkgs

           # sync the rest of the munki_repo to the bucket, excluding .DS_Store and .git files
           # using -d here to delete files in the bucket that are not in the repo
      #    directories=("manifests" "pkgsinfo" "catalogs" "icons")
      #    for dir in "${directories[@]}"; do
      #      gsutil -m rsync -r -d -x '.DS_Store|.git' "${GITHUB_WORKSPACE}/munki_repo/${dir}" "gs://${BUCKET_NAME}/${dir}"
      #    done
      #   env:
      #     BUCKET_NAME: ${{ secrets.BUCKET }}

      - name: Remove pkgs/ dir
        run: /bin/rm -rf ./munki_repo/pkgs/

      - name: collect cache
        run: |
          python3 autopkg/helpers/compress_cache.py
        env:
          autopkg_dir: /Users/runner/Library/AutoPkg
          archive_name: AutoPkg.tar.gz

      - name: upload cache
        id: upload-cache
        uses: actions/upload-artifact@v4
        with:
          name: AutoPkg
          path: AutoPkg.tar.gz
