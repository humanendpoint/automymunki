---
name: Clean Repo

on:
  schedule:
    - cron: 00 19 * * 2
  workflow_dispatch:

jobs:
  clean-repo:
    runs-on: macos-latest
    env:
      MUNKI_SHA256: "5693054947a6f6e696ab6906ae48257802b1348aa2b6a78bd75b6573e37c4483"
      MUNKI_URL: "https://github.com/munki/munki/releases/download/v6.6.0/munkitools-6.6.0.4690.pkg"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install python dependencies
        run: |
          python3 -m pip install --upgrade pip --break-system-packages
          pip3 install requests PyYAML slack_sdk google-cloud-storage --break-system-packages

      - name: Install Munki
        run: |
          curl -L ${{ env.MUNKI_URL }} --output /tmp/munkitools.pkg
          echo "${{ env.MUNKI_SHA256 }} */tmp/munkitools.pkg" | shasum -c
          if [[ $? != "0" ]]; then exit 1; fi
          sudo installer -pkg /tmp/munkitools.pkg -target /

      - name: Run makecatalogs
        run: |
          /usr/local/munki/makecatalogs $GITHUB_WORKSPACE/munki_repo -s

      - name: Run repoclean
        run: |
          /usr/local/munki/repoclean -a --keep 2 $GITHUB_WORKSPACE/munki_repo/
        continue-on-error: true

      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: "872317"
          private-key: ${{ secrets.GIT_APP_PEM_KEY }}

      - name: GCS Auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: Setup Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Run action cleaner script
        id: cleaning-actions
        run: python3 autopkg/tests/test_actions.py
        env:
          WORKFLOW_FOLDER: ${{ github.workspace }}/.github/workflows
          OVERRIDES_FOLDER: ${{ github.workspace }}/autopkg/RecipeOverrides
          PKGSINFO_DIR: ${{ github.workspace }}/munki_repo/pkgsinfo
          MUNKI_REPO_DIR: ${{ github.workspace }}/munki_repo
          REPO_LIST: ${{ github.workspace }}/autopkg/repo_list.txt
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          CHANNEL_ID: ${{ secrets.CHANNEL_ID }}
          GCP_BUCKET: "oit-munki"

      - name: Run makecatalogs again
        run: |
          /usr/local/munki/makecatalogs $GITHUB_WORKSPACE/munki_repo -s

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          branch: clean-munki-repo
          commit-message: Remove old pkgs and pkgsinfo
          title: Remove old packages from Munki repo
          body: |
            This PR may also include updated workflow files due to new Munki and/or AutoPkg versions.


            This PR is automatically generated by Github Actions and ${{ steps.app-token.outputs.app-slug }}.
          token: ${{ steps.app-token.outputs.token }}

  slack-notify-error:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Construct message
        id: slack-error-msg
        run: |
          SLACK_MESSAGE="Follow <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|this link> for specific error info.\n"
          echo "$SLACK_MESSAGE" >> $GITHUB_OUTPUT

      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: ${{ steps.slack-error-msg.outputs.slack-message }}
          MSG_MINIMAL: true
          SLACK_TITLE: Error syncing repo to GCS bucket
          SLACK_FOOLTER:
